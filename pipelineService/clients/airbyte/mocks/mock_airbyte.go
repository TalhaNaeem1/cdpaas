// Code generated by MockGen. DO NOT EDIT.
// Source: pipelineService/clients/airbyte (interfaces: AirByteQuerier)

// Package mock_airbyte is a generated GoMock package.
package mock_airbyte

import (
	models "pipelineService/models/v1"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAirByteQuerier is a mock of AirByteQuerier interface.
type MockAirByteQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockAirByteQuerierMockRecorder
}

// MockAirByteQuerierMockRecorder is the mock recorder for MockAirByteQuerier.
type MockAirByteQuerierMockRecorder struct {
	mock *MockAirByteQuerier
}

// NewMockAirByteQuerier creates a new mock instance.
func NewMockAirByteQuerier(ctrl *gomock.Controller) *MockAirByteQuerier {
	mock := &MockAirByteQuerier{ctrl: ctrl}
	mock.recorder = &MockAirByteQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAirByteQuerier) EXPECT() *MockAirByteQuerierMockRecorder {
	return m.recorder
}

// CheckDestinationConnection mocks base method.
func (m *MockAirByteQuerier) CheckDestinationConnection(arg0 map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDestinationConnection", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckDestinationConnection indicates an expected call of CheckDestinationConnection.
func (mr *MockAirByteQuerierMockRecorder) CheckDestinationConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDestinationConnection", reflect.TypeOf((*MockAirByteQuerier)(nil).CheckDestinationConnection), arg0)
}

// CheckSourceConnection mocks base method.
func (m *MockAirByteQuerier) CheckSourceConnection(arg0 map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckSourceConnection", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckSourceConnection indicates an expected call of CheckSourceConnection.
func (mr *MockAirByteQuerierMockRecorder) CheckSourceConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckSourceConnection", reflect.TypeOf((*MockAirByteQuerier)(nil).CheckSourceConnection), arg0)
}

// CreateConnection mocks base method.
func (m *MockAirByteQuerier) CreateConnection(arg0 models.CreatePipelineAirbyteRequest) (models.CreatePipelineAirbyteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConnection", arg0)
	ret0, _ := ret[0].(models.CreatePipelineAirbyteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConnection indicates an expected call of CreateConnection.
func (mr *MockAirByteQuerierMockRecorder) CreateConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnection", reflect.TypeOf((*MockAirByteQuerier)(nil).CreateConnection), arg0)
}

// CreateDestinationConnectorOnAirByte mocks base method.
func (m *MockAirByteQuerier) CreateDestinationConnectorOnAirByte(arg0 models.CreateDestinationConnectorRequestAirbyte) (models.CreateDestinationConnectorResponseAirbyte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDestinationConnectorOnAirByte", arg0)
	ret0, _ := ret[0].(models.CreateDestinationConnectorResponseAirbyte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDestinationConnectorOnAirByte indicates an expected call of CreateDestinationConnectorOnAirByte.
func (mr *MockAirByteQuerierMockRecorder) CreateDestinationConnectorOnAirByte(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDestinationConnectorOnAirByte", reflect.TypeOf((*MockAirByteQuerier)(nil).CreateDestinationConnectorOnAirByte), arg0)
}

// CreateSourceConnectorOnAirByte mocks base method.
func (m *MockAirByteQuerier) CreateSourceConnectorOnAirByte(arg0 models.CreateSourceConnectorRequestAirbyte) (models.CreateSourceConnectorResponseAirbyte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSourceConnectorOnAirByte", arg0)
	ret0, _ := ret[0].(models.CreateSourceConnectorResponseAirbyte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSourceConnectorOnAirByte indicates an expected call of CreateSourceConnectorOnAirByte.
func (mr *MockAirByteQuerierMockRecorder) CreateSourceConnectorOnAirByte(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSourceConnectorOnAirByte", reflect.TypeOf((*MockAirByteQuerier)(nil).CreateSourceConnectorOnAirByte), arg0)
}

// CreateWorkspace mocks base method.
func (m *MockAirByteQuerier) CreateWorkspace(arg0 models.WorkspaceRequest) (models.WorkspaceAPIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWorkspace", arg0)
	ret0, _ := ret[0].(models.WorkspaceAPIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWorkspace indicates an expected call of CreateWorkspace.
func (mr *MockAirByteQuerierMockRecorder) CreateWorkspace(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWorkspace", reflect.TypeOf((*MockAirByteQuerier)(nil).CreateWorkspace), arg0)
}

// DiscoverSourceSchema mocks base method.
func (m *MockAirByteQuerier) DiscoverSourceSchema(arg0 string) (models.SourceSchema, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiscoverSourceSchema", arg0)
	ret0, _ := ret[0].(models.SourceSchema)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DiscoverSourceSchema indicates an expected call of DiscoverSourceSchema.
func (mr *MockAirByteQuerierMockRecorder) DiscoverSourceSchema(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscoverSourceSchema", reflect.TypeOf((*MockAirByteQuerier)(nil).DiscoverSourceSchema), arg0)
}

// EditSourceConnectorOnAirByte mocks base method.
func (m *MockAirByteQuerier) EditSourceConnectorOnAirByte(arg0 models.EditSourceConnectorRequestAirByte) (models.CreateSourceConnectorResponseAirbyte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditSourceConnectorOnAirByte", arg0)
	ret0, _ := ret[0].(models.CreateSourceConnectorResponseAirbyte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EditSourceConnectorOnAirByte indicates an expected call of EditSourceConnectorOnAirByte.
func (mr *MockAirByteQuerierMockRecorder) EditSourceConnectorOnAirByte(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditSourceConnectorOnAirByte", reflect.TypeOf((*MockAirByteQuerier)(nil).EditSourceConnectorOnAirByte), arg0)
}

// FetchSyncHistory mocks base method.
func (m *MockAirByteQuerier) FetchSyncHistory(arg0 models.SyncHistoryRequest) (models.SyncHistoryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSyncHistory", arg0)
	ret0, _ := ret[0].(models.SyncHistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchSyncHistory indicates an expected call of FetchSyncHistory.
func (mr *MockAirByteQuerierMockRecorder) FetchSyncHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSyncHistory", reflect.TypeOf((*MockAirByteQuerier)(nil).FetchSyncHistory), arg0)
}

// GetConfiguredSource mocks base method.
func (m *MockAirByteQuerier) GetConfiguredSource(arg0 string) (models.ConfiguredSource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfiguredSource", arg0)
	ret0, _ := ret[0].(models.ConfiguredSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfiguredSource indicates an expected call of GetConfiguredSource.
func (mr *MockAirByteQuerierMockRecorder) GetConfiguredSource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfiguredSource", reflect.TypeOf((*MockAirByteQuerier)(nil).GetConfiguredSource), arg0)
}

// GetConnection mocks base method.
func (m *MockAirByteQuerier) GetConnection(arg0 map[string]interface{}) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnection", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnection indicates an expected call of GetConnection.
func (mr *MockAirByteQuerierMockRecorder) GetConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnection", reflect.TypeOf((*MockAirByteQuerier)(nil).GetConnection), arg0)
}

// GetConnectionDetails mocks base method.
func (m *MockAirByteQuerier) GetConnectionDetails(arg0 map[string]interface{}) (models.ConnectionMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionDetails", arg0)
	ret0, _ := ret[0].(models.ConnectionMeta)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnectionDetails indicates an expected call of GetConnectionDetails.
func (mr *MockAirByteQuerierMockRecorder) GetConnectionDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionDetails", reflect.TypeOf((*MockAirByteQuerier)(nil).GetConnectionDetails), arg0)
}

// GetConnectionSchema mocks base method.
func (m *MockAirByteQuerier) GetConnectionSchema(arg0 string) (models.ConnectionSourceSchema, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionSchema", arg0)
	ret0, _ := ret[0].(models.ConnectionSourceSchema)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnectionSchema indicates an expected call of GetConnectionSchema.
func (mr *MockAirByteQuerierMockRecorder) GetConnectionSchema(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionSchema", reflect.TypeOf((*MockAirByteQuerier)(nil).GetConnectionSchema), arg0)
}

// GetConnectionSummary mocks base method.
func (m *MockAirByteQuerier) GetConnectionSummary(arg0 string) (models.ConnectionSummaryAirByte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionSummary", arg0)
	ret0, _ := ret[0].(models.ConnectionSummaryAirByte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnectionSummary indicates an expected call of GetConnectionSummary.
func (mr *MockAirByteQuerierMockRecorder) GetConnectionSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionSummary", reflect.TypeOf((*MockAirByteQuerier)(nil).GetConnectionSummary), arg0)
}

// GetDestinationDefinitions mocks base method.
func (m *MockAirByteQuerier) GetDestinationDefinitions() (models.DestinationDefinitions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDestinationDefinitions")
	ret0, _ := ret[0].(models.DestinationDefinitions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDestinationDefinitions indicates an expected call of GetDestinationDefinitions.
func (mr *MockAirByteQuerierMockRecorder) GetDestinationDefinitions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDestinationDefinitions", reflect.TypeOf((*MockAirByteQuerier)(nil).GetDestinationDefinitions))
}

// GetDestinationSpecification mocks base method.
func (m *MockAirByteQuerier) GetDestinationSpecification(arg0 string) (models.DestinationSpecification, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDestinationSpecification", arg0)
	ret0, _ := ret[0].(models.DestinationSpecification)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDestinationSpecification indicates an expected call of GetDestinationSpecification.
func (mr *MockAirByteQuerierMockRecorder) GetDestinationSpecification(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDestinationSpecification", reflect.TypeOf((*MockAirByteQuerier)(nil).GetDestinationSpecification), arg0)
}

// GetJobLogs mocks base method.
func (m *MockAirByteQuerier) GetJobLogs(arg0 int) (models.JobLogs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobLogs", arg0)
	ret0, _ := ret[0].(models.JobLogs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobLogs indicates an expected call of GetJobLogs.
func (mr *MockAirByteQuerierMockRecorder) GetJobLogs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobLogs", reflect.TypeOf((*MockAirByteQuerier)(nil).GetJobLogs), arg0)
}

// GetSourceDefinitions mocks base method.
func (m *MockAirByteQuerier) GetSourceDefinitions() (models.SourceDefinitions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSourceDefinitions")
	ret0, _ := ret[0].(models.SourceDefinitions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSourceDefinitions indicates an expected call of GetSourceDefinitions.
func (mr *MockAirByteQuerierMockRecorder) GetSourceDefinitions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSourceDefinitions", reflect.TypeOf((*MockAirByteQuerier)(nil).GetSourceDefinitions))
}

// GetSourceSpecification mocks base method.
func (m *MockAirByteQuerier) GetSourceSpecification(arg0 string) (models.SourceSpecification, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSourceSpecification", arg0)
	ret0, _ := ret[0].(models.SourceSpecification)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSourceSpecification indicates an expected call of GetSourceSpecification.
func (mr *MockAirByteQuerierMockRecorder) GetSourceSpecification(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSourceSpecification", reflect.TypeOf((*MockAirByteQuerier)(nil).GetSourceSpecification), arg0)
}

// GetWorkspaceID mocks base method.
func (m *MockAirByteQuerier) GetWorkspaceID() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkspaceID")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkspaceID indicates an expected call of GetWorkspaceID.
func (mr *MockAirByteQuerierMockRecorder) GetWorkspaceID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkspaceID", reflect.TypeOf((*MockAirByteQuerier)(nil).GetWorkspaceID))
}

// SyncConnectionManually mocks base method.
func (m *MockAirByteQuerier) SyncConnectionManually(arg0 map[string]interface{}) (models.ManualConnectionSyncResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SyncConnectionManually", arg0)
	ret0, _ := ret[0].(models.ManualConnectionSyncResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SyncConnectionManually indicates an expected call of SyncConnectionManually.
func (mr *MockAirByteQuerierMockRecorder) SyncConnectionManually(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SyncConnectionManually", reflect.TypeOf((*MockAirByteQuerier)(nil).SyncConnectionManually), arg0)
}

// UpdateConnection mocks base method.
func (m *MockAirByteQuerier) UpdateConnection(arg0 models.UpdatePipelineAirByteRequest) (models.CreatePipelineAirbyteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateConnection", arg0)
	ret0, _ := ret[0].(models.CreatePipelineAirbyteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateConnection indicates an expected call of UpdateConnection.
func (mr *MockAirByteQuerierMockRecorder) UpdateConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateConnection", reflect.TypeOf((*MockAirByteQuerier)(nil).UpdateConnection), arg0)
}
